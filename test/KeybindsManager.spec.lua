local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Shared = ReplicatedStorage:WaitForChild("Shared")
local Modules = Shared:WaitForChild("Modules")

local KeybindsManager = require(Modules.KeybindsManager)

return function ()
	describe("KeybindsManager", function()
		afterEach(function()
			table.clear(KeybindsManager.Actions)
		end)

		it("Creates an ActionClass", function()
			local Action = KeybindsManager:CreateAction("action")
			expect(Action.Name).to.equal("action")
		end)
		it("Throws when no name is provided", function()
			expect(KeybindsManager.CreateAction).to.throw()
		end)
		it("Keeps references of the created ActionClasses", function()
			KeybindsManager:CreateAction("action")
			KeybindsManager:CreateAction("action2")
			KeybindsManager:CreateAction("action3")

			expect(KeybindsManager.Actions["action"]).to.be.ok()
			expect(KeybindsManager.Actions["action2"]).to.be.ok()
			expect(KeybindsManager.Actions["action3"]).to.be.ok()
		end)
		it("Unreferences references of the created ActionClasses", function()
			KeybindsManager:CreateAction("action")
			KeybindsManager:CreateAction("action2")
			KeybindsManager:CreateAction("action3")

			expect(KeybindsManager.Actions["action"]).to.be.ok()
			expect(KeybindsManager.Actions["action2"]).to.be.ok()
			expect(KeybindsManager.Actions["action3"]).to.be.ok()

			table.clear(KeybindsManager.Actions)

			expect(KeybindsManager.Actions["action"]).never.to.be.ok()
			expect(KeybindsManager.Actions["action2"]).never.to.be.ok()
			expect(KeybindsManager.Actions["action3"]).never.to.be.ok()
		end)
	end)

	describe("ActionClass", function()
		beforeEach(function()
			table.clear(KeybindsManager.Actions)
			KeybindsManager:CreateAction("static")
		end)

		it("Registers a key", function()
			expect(function()
				KeybindsManager.Actions.static:RegisterKey(Enum.KeyCode.A)
			end).never.to.throw()
		end)
		it("Registers a userinputtype", function()
			expect(function()
				KeybindsManager.Actions.static:RegisterKey(Enum.UserInputType.MouseButton1)
			end).never.to.throw()
		end)
		it("Throws when provided with a non KeyCode or UserInputType parameter", function()
			expect(function()
				KeybindsManager.Actions.static:RegisterKey()
			end).to.throw()
		end)
		it("Has .Key KeyCode type correct", function()
			KeybindsManager.Actions.static:RegisterKey(Enum.KeyCode.A)
			expect(KeybindsManager.Actions.static:GetKeyType()).to.equal(Enum.KeyCode)
		end)
		it("Has .Key UserInputType type correct", function()
			KeybindsManager.Actions.static:RegisterKey(Enum.UserInputType.MouseButton1)
			expect(KeybindsManager.Actions.static:GetKeyType()).to.equal(Enum.UserInputType)
		end)
	end)
end
